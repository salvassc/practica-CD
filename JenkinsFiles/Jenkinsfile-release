pipeline {
    agent any
    stages {
        stage ('Tag repository') {
            steps {
                sh './changeVersion.sh ${TAG} pom.xml'
            }
        }
        stage("Build project") {
            steps {
                sh "mvn clean package -DskipTests"
            }
        }
        stage("Deploy nexus") {
            steps {
                script {
                    nexusPublisher nexusInstanceId: 'localNexus', nexusRepositoryId: 'mvn-releases', packages: [[$class: 'MavenPackage', mavenAssetList: [[classifier: '', extension: '', filePath: 'target/practica-CD-${TAG}.jar']], mavenCoordinate: [artifactId: 'practica-CD', groupId: 'es.urjc.code', packaging: 'jar', version: '${TAG}']]]
                }
            }
        }
        stage("Publish Docker image") {
            steps {
                script {
                    sh 'docker build -t ssanantonio/practica_cd:${TAG} .'
                    withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'ssanantonio-dockerhub', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]) { 
                        sh 'docker login -u "$USERNAME" -p "$PASSWORD"'
                        sh 'docker push ssanantonio/practica_cd' 
                        }
                }
            }
        }
        stage("Deploy k8s") {
            steps {
                sh 'cat k8s.yaml | sed "s/{{TAG}}/${TAG}/g" | microk8s.kubectl apply -f - '
                sh 'microk8s.kubectl get service practica-cd'
            }
        }
    }
}